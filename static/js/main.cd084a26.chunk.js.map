{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","switchGood","goodName","setState","includes","filter","good","clearGoods","getGoods","length","slice","join","this","className","type","onClick","map","isSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,YAAwB,IAArBH,EAAoB,EAApBA,cAKf,MAAO,CACLA,cALgBA,EAAcI,SAASF,GACrCF,EAAcK,QAAO,SAACC,GAAD,OAAUA,IAASJ,KAD3B,sBAETF,GAFS,CAEME,S,EAQ3BK,WAAa,WACX,EAAKJ,SAAS,CAAEH,cAAe,M,EAGjCQ,SAAW,WACT,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcS,OAAS,EAC3B,CACAT,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAChCX,EAAcU,OAAO,IACrBC,KAAK,OACLX,EAAcW,KAAK,U,4CAGzB,WAAU,IAAD,OACCX,EAAkBY,KAAKb,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UAE8B,IAAzBb,EAAcS,OACX,WACAG,KAAKJ,WAIRR,EAAcS,OAAS,GACtB,wBACEI,UAAU,cACVC,KAAK,SACLC,QAASH,KAAKL,WAHhB,sBAUN,oBAAIM,UAAU,YAAd,SACGhB,EAAgBmB,KAAI,SAAAV,GACnB,IAAMW,EAAajB,EAAcI,SAASE,GAE1C,OACE,qBACEO,UAAU,kBADZ,UAIE,sBAAMA,UAAU,mBAAhB,SACGP,IAEH,wBACEQ,KAAK,SACLD,UAAU,oBACVE,QAAS,WACP,EAAKd,WAAWK,IAJpB,SAQIW,EACI,SACA,aAfHX,e,GA/DHY,IAAMC,WA0FTrB,IC3GfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd084a26.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  switchGood = (goodName: string): void => {\n    this.setState(({ selectedGoods }) => {\n      const newGoods = (selectedGoods.includes(goodName))\n        ? selectedGoods.filter((good) => good !== goodName)\n        : [...selectedGoods, goodName];\n\n      return {\n        selectedGoods: newGoods,\n      };\n    });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  getGoods = (): string => {\n    const { selectedGoods } = this.state;\n\n    return (selectedGoods.length > 2)\n      ? [\n        selectedGoods.slice(0, -1).join(', '),\n        selectedGoods.slice(-1),\n      ].join('and')\n      : selectedGoods.join(' and ');\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">\n          {\n            (selectedGoods.length === 0)\n              ? 'No goods'\n              : this.getGoods()\n          }\n\n          {\n            (selectedGoods.length > 0) && (\n              <button\n                className=\"app__button\"\n                type=\"button\"\n                onClick={this.clearGoods}\n              >\n                Clear\n              </button>\n            )\n          }\n        </h1>\n        <ul className=\"goodsList\">\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGoods.includes(good);\n\n            return (\n              <li\n                className=\"goodsList__item\"\n                key={good}\n              >\n                <span className=\"goodsList__goods\">\n                  {good}\n                </span>\n                <button\n                  type=\"button\"\n                  className=\"goodsList__button\"\n                  onClick={() => {\n                    this.switchGood(good);\n                  }}\n                >\n                  {\n                    isSelected\n                      ? 'Remove'\n                      : 'Select'\n                  }\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}